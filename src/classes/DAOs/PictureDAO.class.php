<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.0.9 at 2012-07-16 11:28:06                         *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/

	final class PictureDAO extends AutoPictureDAO
	{
		public function add(Identifiable $object)
		{
			if ($tmpName = $object->getUploadName()) {
				try {
					$type = ImageType::createByFileName($object->getName());

					if ($type->getMimeType() != $object->getTypeId())
						throw new WrongArgumentException();
				} catch(WrongArgumentException $e) {
					$type = $this->getImageTypeByMimeType($file['type']);
				}

				$object->setType($type);

				if ($info = getimagesize($tmpName)) {
					$object->
						setWidth($info[0])->
						setHeight($info[1]);
				} else {
					throw new DatabaseException();
				}
			} else {
				throw new WrongArgumentException('No upload file name');
			}
			
			try {
				if ($object->isMain()) {
					$this->dropMain($object->getProperty());
				}
				
				$db = DBPool::me()->getLink($this->getLinkName())->begin();
				
				if ($object = parent::add($object)) {
			 		$path = PATH_PIX.$object->getId().'.'.$type->getExtension();
					
					if (!move_uploaded_file($tmpName, $path))
						throw new DatabaseException();
					
					$db->commit();
				} else
					throw new DatabaseException();
			} catch (DatabaseException $e) {
				$db->rollback();
			}
		
			return $object;
		}
		
		public function dropMain(Property $property)
		{
			try {
				$picture = $this->getByLogic(
					Expression::andBlock(
						Expression::eqId('property', $property),
						Expression::isTrue('main')
					)
				);
				
				if ($picture->getId()) {
					$this->save($picture->setMain(false));
				}
			} catch (DatabaseException $e) {/*_*/}
			
			return $this;
		}
	}
